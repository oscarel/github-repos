{"version":3,"sources":["services/api.js","pages/Main/styles.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Header","styled","div","Form","form","rotate","keyframes","SubmitButton","button","attrs","props","type","disabled","loading","css","Infos","inloading","err","UserInfo","ListRepo","ul","Main","state","newUser","userInfo","repositories","handleInputChange","e","setState","target","value","handleSubmit","a","preventDefault","Promise","all","get","responseUser","responseRepos","data","name","login","avatar","avatar_url","url","html_url","user","localStorage","getItem","repos","this","JSON","parse","_","prevState","setItem","stringify","color","onSubmit","placeholder","onChange","toString","size","src","alt","className","href","rel","map","repo","key","description","to","encodeURIComponent","full_name","Component","Container","header","Loading","Repository","langs","formatDate","slice","formatLanguage","obj","Object","keys","match","repoName","decodeURIComponent","params","repository","response","languages","owner","language","lang","String","created_at","pushed_at","updated_at","license","subscribers_count","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfaa2e78.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com',\r\n});\r\n\r\nexport default api;\r\n","import styled, { keyframes, css } from 'styled-components';\r\n\r\nexport const Header = styled.div`\r\n  background-color: #2C2B35;\r\n  border-bottom: solid 1px #333333;\r\n  padding: 15px;\r\n  display:flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  h1{\r\n    color: #FFF;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 20px;\r\n\r\n    svg{\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin-top: 5px;\r\n\r\n  input{\r\n    padding: 10px;\r\n    color: #FFF;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  from{\r\n    transform: rotate(0deg)\r\n  }\r\n\r\n  to{\r\n    transform: rotate(360deg)\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button.attrs((props) => ({\r\n  type: 'subimit',\r\n  disabled: (props.loading === 'true'),\r\n}))`\r\n  padding: 10px 15px;\r\n  border-radius: 10px;\r\n\r\n  &[disabled]{\r\n    cursor: not-allowed;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  ${(props) => props.disabled && css`\r\n    svg{\r\n      animation: ${rotate} 2s linear infinite;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const Infos = styled.div.attrs((props) => ({\r\n  inloading: (props.loading === 'true'),\r\n}))`\r\n  margin: 10px auto;\r\n  display: flex;\r\n  align-items: baseline;\r\n  a{\r\n    text-decoration: none;\r\n    color: salmon;\r\n    border-bottom: 1px solid salmon;\r\n    font-weight: bold;\r\n\r\n    &:hover{\r\n      transition: all 200ms;\r\n      color: #4FFA7B;\r\n    }\r\n  }\r\n  \r\n  ${(props) => props.err && css`\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    h2{ color: salmon; }\r\n  `}\r\n\r\n  ${(props) => props.inloading && css`\r\n    height: 70vh;\r\n    justify-content: center;\r\n    align-items: center;\r\n    svg{\r\n      animation: ${rotate} 2s linear infinite;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  margin: 0px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  \r\n  p{\r\n    color: #4FFA7B;\r\n    font-weight: bold;\r\n    font-size: 25px;\r\n  }\r\n\r\n  img{\r\n    width: 150px;\r\n    border-radius: 50%;\r\n    margin: 5px auto;\r\n  }\r\n`;\r\n\r\nexport const ListRepo = styled.ul`\r\n  margin: 10px 20px;\r\n\r\n  li{\r\n    margin: 10px auto;\r\n    color: #4FFA7B;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n\r\n    p{\r\n      color: yellow;\r\n      font-size: 15px;\r\n    }\r\n\r\n    a{\r\n      font-size: 10px;\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  FaSearch, FaGithub, FaSpinner, FaExclamationTriangle,\r\n} from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport {\r\n  Header, Form, SubmitButton, UserInfo, Infos, ListRepo,\r\n} from './styles';\r\n\r\nexport default class Main extends Component {\r\n  state = {\r\n    newUser: '',\r\n    userInfo: {},\r\n    repositories: [],\r\n    loading: false,\r\n    err: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = localStorage.getItem('user');\r\n    const repos = localStorage.getItem('repos');\r\n\r\n    if (user || repos) {\r\n      this.setState({\r\n        userInfo: JSON.parse(user),\r\n        repositories: JSON.parse(repos),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    const { userInfo, repositories } = this.state;\r\n\r\n    if ((prevState.userInfo !== userInfo) || (prevState.repositories !== repositories)) {\r\n      localStorage.setItem('user', JSON.stringify(userInfo));\r\n      localStorage.setItem('repos', JSON.stringify(repositories));\r\n    }\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ newUser: e.target.value });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ err: false, loading: true });\r\n\r\n    const { newUser } = this.state;\r\n\r\n    try {\r\n      const [responseUser, responseRepos] = await Promise.all([\r\n        api.get(`/users/${newUser}`),\r\n        api.get(`/users/${newUser}/repos`),\r\n      ]);\r\n\r\n      this.setState({\r\n        repositories: responseRepos.data,\r\n        userInfo: {\r\n          name: responseUser.data.login,\r\n          avatar: responseUser.data.avatar_url,\r\n          url: responseUser.data.html_url,\r\n        },\r\n        newUser: '',\r\n        loading: false,\r\n        err: false,\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false,\r\n        err: true,\r\n        newUser: '',\r\n        userInfo: {},\r\n        repositories: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      newUser, loading, userInfo, repositories, err,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Header>\r\n          <h1><FaGithub color=\"#FFF\" /> Listagem de repositórios</h1>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Digite o usuário\"\r\n              value={newUser}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <SubmitButton loading={loading.toString()}>\r\n              { loading ? (\r\n                <FaSpinner size={14} />\r\n              ) : (\r\n                <FaSearch size={14} />\r\n              )}\r\n            </SubmitButton>\r\n          </Form>\r\n        </Header>\r\n\r\n        <Infos loading={loading.toString()} err={err}>\r\n          {err ? (\r\n            <>\r\n              <FaExclamationTriangle size={30} color=\"salmon\" />\r\n              <h2>Falha ao encontrar usuário</h2>\r\n            </>\r\n          ) : <></>}\r\n          { (loading && !err) ? (\r\n            <FaSpinner size={30} color=\"#FFF\" />\r\n          ) : (\r\n            <>\r\n              <UserInfo>\r\n                <p>{userInfo.name}</p>\r\n                <img src={userInfo.avatar} alt={userInfo.name} />\r\n                <a\r\n                  className=\"link\"\r\n                  href={userInfo.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >{userInfo.name}\r\n                </a>\r\n              </UserInfo>\r\n\r\n              <ListRepo>\r\n                {repositories.map((repo) => (\r\n                  <li key={repo.name}>\r\n                    {repo.name}\r\n                    <p>{repo.description || '---'}</p>\r\n                    <a\r\n                      href={repo.html_url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >GITHUB REPOSITÓRIO\r\n                    </a>\r\n                    <br />\r\n                    <Link to={`/repository/${encodeURIComponent(repo.full_name)}`}>\r\n                      MAIS DETALHES\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ListRepo>\r\n\r\n            </>\r\n          )}\r\n        </Infos>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import styled, { keyframes, css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  color: #FFF;\r\n  max-width: 700px;\r\n  background-color: #2E2B35;\r\n  margin: 80px auto;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  box-shadow: inset 0 0 1em transparent, 0 0 1em #4FFA7B;\r\n`;\r\n\r\nexport const Main = styled.header`\r\n  font-weight: bold;\r\n  margin: 10px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  .link-button{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #FFF;\r\n    border: 1px solid #4FFA7B;\r\n    text-decoration: none;\r\n    padding: 5px 25px;\r\n    border-radius: 10px;\r\n    margin-bottom: 10px;\r\n    font-size: 15px;\r\n\r\n    &:hover{\r\n      background-color: #4FFA7B;\r\n      color: black;\r\n      transition: all 200ms;\r\n    }\r\n  }\r\n\r\n  h1{\r\n    color: #4FFA7B;\r\n  }\r\n\r\n  p{\r\n    text-align: center;\r\n    max-width: 550px;\r\n    color: yellow;\r\n    font-size: 15px;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  .link-owner{\r\n    color: salmon;\r\n    text-decoration: none;\r\n    border-bottom: 1px solid salmon;\r\n  }\r\n`;\r\n\r\nexport const Infos = styled.div`\r\n  margin: 10px 0;\r\n  p{\r\n    color: pink;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    line-height: 1.4;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  from{\r\n    transform: rotate(0deg)\r\n  }\r\n\r\n  to{\r\n    transform: rotate(360deg)\r\n  }\r\n`;\r\n\r\nexport const Loading = styled.div.attrs((props) => ({\r\n  inloading: (props.loading === 'true'),\r\n}))`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${(props) => props.inloading && css`\r\n    svg{\r\n      animation: ${rotate} 2s linear infinite;\r\n    }\r\n  `}\r\n`;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FaSpinner, FaArrowLeft } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../services/api';\r\n\r\nimport {\r\n  Container, Loading, Main, Infos,\r\n} from './styles';\r\n\r\nexport default class Repository extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.shape({\r\n      params: PropTypes.shape({\r\n        repository: PropTypes.string,\r\n      }),\r\n    }).isRequired,\r\n  };\r\n\r\n  state = {\r\n    repo: { },\r\n    langs: { },\r\n    loading: true,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    const repoName = decodeURIComponent(match.params.repository);\r\n\r\n    const [response, languages] = await Promise.all([\r\n      api.get(`/repos/${repoName}`),\r\n      api.get(`/repos/${repoName}/languages`),\r\n    ]);\r\n\r\n    this.setState({\r\n      repo: response.data,\r\n      loading: false,\r\n      langs: languages.data,\r\n    });\r\n  }\r\n\r\n  formatDate = (data) => `${data.slice(8, 10)}/${data.slice(5, 7)}/${data.slice(0, 4)} - ${data.slice(11, 19)}`\r\n\r\n  formatLanguage = (obj) => Object.keys(obj)\r\n\r\n  render() {\r\n    const { repo, loading, langs } = this.state;\r\n\r\n    if (loading) {\r\n      return (\r\n        <Loading loading={loading.toString()}>\r\n          <FaSpinner color=\"#FFF\" size={40} />\r\n        </Loading>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Main>\r\n          <Link to=\"/github-repos\" className=\"link-button\"><FaArrowLeft size={15} />VOLTAR</Link>\r\n          <a\r\n            className=\"link-button\"\r\n            href={repo.html_url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          > REPOSITORIO\r\n          </a>\r\n          <h1>{repo.name}</h1>\r\n          <p>{repo.description || '---no description---'}</p>\r\n          <a\r\n            className=\"link-owner\"\r\n            href={repo.owner.html_url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          > {repo.owner.login}\r\n          </a>\r\n        </Main>\r\n\r\n        <Infos>\r\n          <p>Linguagens usadas:</p>\r\n          { !repo.language ? <p>---no language---</p> : <></> }\r\n          { this.formatLanguage(langs).map((lang) => (\r\n            <p key={String(lang)}> {lang} </p>\r\n          ))}\r\n        </Infos>\r\n\r\n        <Infos>\r\n          <p>Criado: {this.formatDate(repo.created_at)}</p>\r\n          <p>Push: {repo.pushed_at ? this.formatDate(repo.pushed_at) : '---no pushed---'}</p>\r\n          <p>Atualizado: {this.formatDate(repo.updated_at)}</p>\r\n        </Infos>\r\n\r\n        <Infos>\r\n          <p>Licença: {repo.license ? repo.license.name : '---no license--'}</p>\r\n          <p>Inscritos: {repo.subscribers_count}</p>\r\n        </Infos>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Main from './pages/Main';\r\nimport Repository from './pages/Repository';\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/github-repos\" exact component={Main} />\r\n        <Route path=\"/repository/:repository\" component={Repository} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n    border: 0;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  html, body, #root {\r\n    min-height: 100%;\r\n  }\r\n\r\n  body {\r\n    background: #302F39;\r\n    -webkit-font-smoothing: antialiased !important;\r\n  }\r\n\r\n  input{\r\n    background: transparent;\r\n    border-bottom: 1px solid #4FFA7B;\r\n  }\r\n\r\n  button{\r\n    background: transparent;\r\n    border: 1px solid #4FFA7B;\r\n    color: #FFF;\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n      background: #4FFA7B;\r\n      color: #000000;\r\n      transition: 200ms;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}